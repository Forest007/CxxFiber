################OPTION###################
# release or debug
VERTYPE=RELEASE

KERNEL:=$(shell uname)
LIBDIR = win

CCOMPILE = cl.exe
LINK = link.exe

!if $(VERTYPE) == RELEASE
COMPILEOPTION = -c /Zi /nologo /W3 /WX- /O2 /Oy- /D "WIN32" /D "NDEBUG" /D "_CONSOLE" /Gm- /EHsc /MD /GS /fp:precise /Zc:wchar_t /Zc:forScope /Gd /analyze- -D_WINDOWS -D_MBCS -D_LIB -DES_DECLARE_EXPORT -D__MAIN__
TESTECO = testeco.exe
BENCHMARK = benchmark.exe
ECHOSERVER = echoserver.exe
!else
COMPILEOPTION = -c /Zi /nologo /W3 /WX- /O2 /Oy- /D "WIN32" /D "NDEBUG" /D "_CONSOLE" /Gm- /EHsc /MD /GS /fp:precise /Zc:wchar_t /Zc:forScope /Gd /analyze- -D_WINDOWS -D_MBCS -D_LIB -DES_DECLARE_EXPORT -D__MAIN__
TESTECO = testeco_d.exe
BENCHMARK = benchmark_d.exe
ECHOSERVER = echoserver_d.exe
!endif

LINKOPTION = /NOLOGO /SUBSYSTEM:CONSOLE /OPT:REF /OPT:ICF /TLBID:1 /DYNAMICBASE /NXCOMPAT /MACHINE:X86

INCLUDEDIR = -I..\..\CxxJDK\inc \
	-I..\..\CxxJDK\inc\comm \
	-I..\..\CxxJDK\inc\efc \
	-I..\..\CxxJDK\inc\efc\concurrent \
	-I..\..\CxxJDK\inc\efc\cpp11 \
	-I..\..\CxxJDK\inc\efc\nio \
	-I..\..\CxxJDK\inc\libc \
	-I..\inc \
	-I..\ \

LIBDIRS = ..\..\CxxJDK\lib\$(LIBDIR)\eso8.lib ..\..\CxxJDK\lib\$(LIBDIR)\efc8.lib "Ws2_32.lib" "kernel32.lib" "user32.lib" "gdi32.lib" "winspool.lib" "comdlg32.lib" "advapi32.lib" "shell32.lib" "ole32.lib" "oleaut32.lib" "uuid.lib" "odbc32.lib" "odbccp32.lib"

BASE_OBJS = \
	..\src\EContext.obj \
	..\src\EFiber.obj \
	..\src\EFiberBlocker.obj \
	..\src\EFiberCondition.obj \
	..\src\EFiberDebugger.obj \
	..\src\EFiberMutex.obj \
	..\src\EFiberScheduler.obj \
	..\src\EFiberTimer.obj \
	..\src\EFileContext.obj \
	..\src\EHooker.obj \
	..\src\EIoWaiter.obj \
	..\src\eco_ae.obj \
	..\src\eco_ae_epoll.obj \
	..\src\eco_ae_kqueue.obj \

TESTECO_OBJS = testeco.obj \

BENCHMARK_OBJS = benchmark.obj \

ECHOSERVER_OBJS = echoserver.obj \

$(TESTECO): $(BASE_OBJS) $(TESTECO_OBJS) 
	$(LINK) $(LINKOPTION) /out:$(TESTECO) $(LIBDIRS) $(BASE_OBJS) $(TESTECO_OBJS)

$(BENCHMARK): $(BASE_OBJS) $(BENCHMARK_OBJS) 
	$(LINK) $(LINKOPTION) /out:$(BENCHMARK) $(LIBDIRS) $(BASE_OBJS) $(BENCHMARK_OBJS)

$(ECHOSERVER): $(BASE_OBJS) $(ECHOSERVER_OBJS) 
	$(LINK) $(LINKOPTION) /out:$(ECHOSERVER) $(LIBDIRS) $(BASE_OBJS) $(ECHOSERVER_OBJS)

clean: 
	del $(BASE_OBJS) 
	del $(TESTECO_OBJS) 
	del $(BENCHMARK_OBJS) 
	del $(ECHOSERVER_OBJS) 

all: clean $(TESTECO) $(BENCHMARK) $(ECHOSERVER) clean
.PRECIOUS:%.cpp %.c %.C
.SUFFIXES:
.SUFFIXES:  .cpp .obj

.cpp.obj:
	$(CCOMPILE) -c -Fo$* -o $*.obj $(COMPILEOPTION) $(INCLUDEDIR) $*.cpp

.c.o:
	$(CCOMPILE) -c -Fo$* -o $*.obj $(CCOMPILEOPTION) $(INCLUDEDIR) $*.c
